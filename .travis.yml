before_install:
- cd /usr/local/src/
- sudo wget https://www.openssl.org/source/openssl-1.0.2s.tar.gz
- sudo tar xzvf openssl-1.0.2s.tar.gz
- cd openssl-1.0.2s
- openssl version -a
- sudo ./config --prefix=/usr/local/ssl --openssldir=/usr/local/ssl shared zlib
- sudo make
- sudo make install
- cd /etc/ld.so.conf.d/
- sudo touch openssl-1.0.2s.conf
- sudo echo "/usr/local/ssl/lib" >> /etc/ld.so.conf.d/openssl-1.0.2s.conf
- sudo ldconfig -v
- sudo mv /usr/bin/c_rehash /usr/bin/c_rehash.BEKUP
- sudo mv /usr/bin/openssl /usr/bin/openssl.BEKUP
- sudo echo 'PATH="/usr/local/ssl/lib:$PATH"' >> /etc/environment
- sudo source /etc/environment
- echo $PATH
- which openssl
- openssl version -a
- cd /home/travis/build/StevenMMortimer/salesforcer
- openssl aes-256-cbc -K $encrypted_a1be6e21f2cd_key -iv $encrypted_a1be6e21f2cd_iv -in tests/testthat/salesforcer.tar.enc -out tests/testthat/salesforcer.tar -d
- tar xvf tests/testthat/salesforcer.tar -C tests/testthat
- R -q -e 'install.packages(c("remotes", "curl", "RForcecom")); remotes::install_github("ropenscilabs/tic");
  tic::prepare_all_stages(); tic::before_install()'
install: R -q -e 'tic::install()'
after_install: R -q -e 'tic::after_install()'
before_script: R -q -e 'tic::before_script()'
script: R -q -e 'tic::script()'
after_success: R -q -e 'tic::after_success()'
after_failure: R -q -e 'tic::after_failure()'
before_deploy: R -q -e 'tic::before_deploy()'
deploy:
  provider: script
  script: R -q -e 'tic::deploy()'
  on:
    all_branches: true
after_deploy: R -q -e 'tic::after_deploy()'
after_script: R -q -e 'tic::after_script()'
language: r
sudo: false
dist: xenial
cache: packages
latex: false
matrix:
  include:
  - r: release
env:
  global:
  - _R_CHECK_FORCE_SUGGESTS_=false
  - MAKEFLAGS="-j 2"
  - TRAVIS_CXXFLAGS="-Wall -Wextra -pedantic -Werror"
services: 
