% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bulk-operation.R
\name{sf_bulk_operation}
\alias{sf_bulk_operation}
\title{Run Bulk Operation}
\usage{
sf_bulk_operation(input_data, object_name, operation = c("insert", "delete",
  "upsert", "update"), external_id_fieldname = NULL,
  wait_for_results = TRUE, interval_seconds = 3, max_attempts = 200,
  verbose = FALSE)
}
\arguments{
\item{input_data}{\code{named vector}, \code{matrix}, \code{data.frame}, or 
\code{tbl_df}; data can be coerced into .csv file for submitting as batch request}

\item{object_name}{character; the name of one Salesforce objects that the 
function is operating against (e.g. "Account", "Contact", "CustomObject__c")}

\item{operation}{character string defining the type of operation being performed}

\item{external_id_fieldname}{character; string identifying a custom field on the 
object that has been set as an "External ID" field. This field is used to reference 
objects during upserts to determine if the record already exists in Salesforce or not.}

\item{wait_for_results}{logical; indicating whether to wait for the operation to complete 
so that the batch results of individual records can be obtained}

\item{interval_seconds}{an integer defining the seconds between attempts to check for job completion}

\item{max_attempts}{an integer defining then max number attempts to check for job completion before stopping}

\item{verbose}{logical; do you want informative messages?}
}
\description{
This function is a convenience wrapper for submitting bulk API jobs
}
\examples{
\dontrun{
n <- 20
new_contacts <- data.frame(FirstName = rep("Test", n), 
                           LastName = paste0("Contact", 1:n))
# insert new records into the Contact object
inserts <- sf_bulk_operation(input_data=new_contacts, 
                             object_name="Contact", 
                             operation="insert")
}
}
\references{
\url{https://developer.salesforce.com/docs/atlas.en-us.api_asynch.meta/api_asynch/}
}
